import streamlit as st
from utils import load_all_excels, semantic_search, keyword_search
import requests

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã
@st.cache_data
def load_data():
    return load_all_excels()

st.set_page_config(page_title="üí¨ GPT-like –±–æ—Ç", layout="wide")
st.title("ü§ñ GPT-–ø–æ–¥–æ–±–Ω—ã–π –±–æ—Ç + –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫")

df = load_data()

# –î–∏–∞–ª–æ–≥–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è
if "history" not in st.session_state:
    st.session_state.history = []

# –ü–æ–∫–∞–∑ –∏—Å—Ç–æ—Ä–∏–∏
for role, msg in st.session_state.history:
    with st.chat_message(role):
        st.markdown(msg)

# –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
prompt = st.chat_input("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶")

if prompt:
    st.session_state.history.append(("user", prompt))
    with st.chat_message("assistant"):
        st.markdown("üß† –î—É–º–∞—é‚Ä¶")

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥–µ–ª–∏
    context = ""
    for role, msg in st.session_state.history:
        prefix = "User:" if role == "user" else "Assistant:"
        context += f"{prefix} {msg}\n"
    context += "Assistant:"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ llama2 —á–µ—Ä–µ–∑ Replicate –¥–µ–º–æ-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å)
    res = requests.post(
        "https://replicate-api-proxy.glitch.me/llama2-7b-chat",
        json={"prompt": context, "temperature": 0.7, "max_new_tokens": 200}
    )

    if res.status_code == 200:
        answer = res.json().get("text", "").strip()
    else:
        answer = "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ LLM."

    st.session_state.history.append(("assistant", answer))

    # Semantic Search
    sem = semantic_search(prompt, df)
    kw = keyword_search(prompt, df)

    output = []
    if sem:
        for s, phrase, topics, comment in sem:
            output.append(f"üîπ {phrase} (_{', '.join(topics)}_) ‚Äî {s:.2f}")
    elif kw:
        for phrase, topics, comment in kw:
            output.append(f"üî∏ {phrase} (_{', '.join(topics)}_)")
    else:
        output.append("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ.")

    st.session_state.history.append(("assistant", "\n".join(output)))

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 2—Ö —Ä–µ–ø–ª–∏–∫
    for role, msg in st.session_state.history[-2:]:
        with st.chat_message(role):
            st.markdown(msg)
