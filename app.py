import streamlit as st
from utils import load_all_files, semantic_search, keyword_search, filter_by_topics

# ----------- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö -----------
@st.cache_resource
def load_data():
    return load_all_files()

df = load_data()

# ----------- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è -----------
st.set_page_config(page_title="Semantic Assistant", layout="wide")
st.title("üîç Semantic Assistant")

# –ë–ª–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
all_topics = sorted({topic for topics in df["topics"] for topic in topics})
selected_topics = st.multiselect("–§–∏–ª—å—Ç—Ä –ø–æ —Ç–µ–º–∞—Ç–∏–∫–∞–º", all_topics)

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –ø–æ–∏—Å–∫–∞
search_mode = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞:", ["–¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫", "–£–º–Ω—ã–π –ø–æ–∏—Å–∫"], horizontal=True)

# –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
top_k = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–¥–ª—è —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞)", min_value=1, max_value=50, value=10)

if st.button("–ù–∞–π—Ç–∏"):
    if not query.strip():
        st.warning("–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
    else:
        if search_mode == "–¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫":
            results = keyword_search(query, df)
        else:
            results = semantic_search(query, df, top_k=top_k)

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞—Ç–∏–∫–∞–º
        results = filter_by_topics(results, selected_topics)

        if not results:
            st.info("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        else:
            for item in results:
                if len(item) == 4:  # –£–º–Ω—ã–π –ø–æ–∏—Å–∫
                    score, phrase, topics, comment = item
                    st.markdown(f"**–§—Ä–∞–∑–∞:** {phrase}  \n**–°—Ö–æ–∂–µ—Å—Ç—å:** {score:.4f}  \n**–¢–µ–º–∞—Ç–∏–∫–∏:** {', '.join(topics)}  \n**–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** {comment}")
                else:  # –¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫
                    phrase, topics, comment = item
                    st.markdown(f"**–§—Ä–∞–∑–∞:** {phrase}  \n**–¢–µ–º–∞—Ç–∏–∫–∏:** {', '.join(topics)}  \n**–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** {comment}")

            st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
